@model DashboardAvailabilityViewModel

<div id="customerAvailability">
    <div>
        <el-row>
            <el-row>
                <el-col :span="3">
                    <el-select v-model="selectedCustomerId" placeholder="Customers" v-on:change="fetchCustomerHours">
                        <el-option v-for="customer in customers"
                                   :key="customer.id"
                                   :label="customer.name"
                                   :value="customer.id">
                        </el-option>
                    </el-select>
                </el-col>
                <el-col :span="6" v-if="!selectedCustomerId">
                    <p class="padding-top-7px">Please select a customer to continue</p>
                </el-col>
            </el-row>
            <transition name="fade">
                <div v-if="selectedCustomerId > 0">
                    <el-row>
                        <el-col :span="9">
                            <el-table :data="customerHours"
                                      class="width-100"
                                      max-height="800">
                                <el-table-column prop="dayOfWeekText"
                                                 label="Day">
                                </el-table-column>
                                <el-table-column prop="fullHoursText"
                                                 label="Hours">
                                </el-table-column>
                                <el-table-column :index="6">
                                    <template slot-scope="scope">
                                        <el-button icon="el-icon-edit" circle type="primary" v-on:click="populateModel(scope.row)"></el-button>
                                        <el-button type="danger" icon="el-icon-delete" circle v-on:click="promptDeleteCustomerHours(scope.row.id)"></el-button>
                                    </template>
                                </el-table-column>
                            </el-table>
                        </el-col>
                        <el-col :push="2" :span="13">
                            <el-row class="margin-top-40px">
                                <el-card>
                                    <el-row>
                                        <h4>Modify hours - {{ selectedCustomerName }}</h4>
                                    </el-row>
                                    <el-row class="padding-top-10px">
                                        <el-col :span="7">
                                            <el-form v-model="customerHoursModel">
                                                <el-form-item label="Day: ">
                                                    <el-select v-model="customerHoursModel.dayOfWeek" placeholder="Day">
                                                        <el-option v-for="day in daysOfTheWeek"
                                                                   :key="day.value"
                                                                   :label="day.label"
                                                                   :value="day.value">
                                                        </el-option>
                                                    </el-select>
                                                </el-form-item>
                                            </el-form>
                                        </el-col>
                                        <el-col :push="1" :span="7">
                                            <el-form v-model="customerHoursModel">
                                                <el-form-item label="Open: ">
                                                    <el-time-picker v-model="customerHoursModel.opening"
                                                                    placeholder="Select time"
                                                                    format="hh:mm A"
                                                                    :picker-options="timePickerConfig"
                                                                    :default-value="new Date(2000, 1, 1, 8, 0)"
                                                                    :clearable="false">
                                                    </el-time-picker>
                                                </el-form-item>
                                            </el-form>
                                        </el-col>
                                        <el-col :push="2" :span="7">
                                            <el-form v-model="customerHoursModel">
                                                <el-form-item label="Closed: ">
                                                    <el-time-picker v-model="customerHoursModel.closing"
                                                                    placeholder="Select time"
                                                                    format="hh:mm A"
                                                                    :picker-options="timePickerConfig"
                                                                    :default-value="new Date(2000, 1, 1, 17, 0)"
                                                                    :clearable="false"
                                                    >
                                                    </el-time-picker>
                                                </el-form-item>
                                            </el-form>
                                        </el-col>
                                    </el-row>
                                    <el-row>
                                        <el-col :push="18" :span="6">
                                            <el-button icon="el-icon-check" type="success" v-on:click="saveCustomerHours">Save</el-button>
                                            <el-button icon="el-icon-close" type="info" v-on:click="resetCustomerHoursModel">Clear</el-button>
                                        </el-col>
                                    </el-row>
                                </el-card>
                            </el-row>
                        </el-col>
                    </el-row>
                </div>
            </transition>
        </el-row>
    </div>
</div>

<script type="text/javascript">

    ELEMENT.locale(ELEMENT.lang.en)

    new Vue({
        el: '#customerAvailability',
        data: {
            selectedCustomerId: null,
            daysOfTheWeek: [
                {
                    value: 0,
                    label: 'Sunday'
                },
                {
                    value: 1,
                    label: 'Monday'
                },
                {
                    value: 2,
                    label: 'Tuesday'
                },
                {
                    value: 3,
                    label: 'Wednesday'
                },
                {
                    value: 4,
                    label: 'Thursday'
                },
                {
                    value: 5,
                    label: 'Friday'
                },
                {
                    value: 6,
                    label: 'Saturday'
                }
            ],
            customers: [],
            customerHours: [],
            customerHoursModel:
            {
                id: 0,
                customerId: 0,
                dayOfWeek: null,
                opening: '',
                closing: ''
            },
            timePickerConfig:
            {
                format: 'hh:mm A'
            }
        },
        methods: {
            promptDeleteCustomerHours(id) {
                this.$confirm(`This will delete the hours from the system. Continue?`, 'Warning', {
                    confirmButtonText: 'OK',
                    cancelButtonText: 'Cancel',
                    type: 'warning'
                }).then(() => {
                    this.deleteCustomerHours(id);
                }).catch(() => {
                    this.$message({
                        type: 'info',
                        message: 'Delete canceled'
                    });
                });
            },
            deleteCustomerHours(id) {
                var that = this
                var urlString = `/api/customer-hours/${id}`
                $.ajax({
                    type: "DELETE",
                    url: urlString,
                    dataType: "json",
                    success: function (result) {
                        that.fetchCustomerHours()
                    },
                    error: function (err) {
                        console.log(err)
                        handleErrorResponse(err, "Deletion error", that)
                    }
                });
            },
            fetchCustomers: function () {
                var that = this
                $.ajax({
                    type: "GET",
                    url: "/api/customers",
                    dataType: "json",
                    success: function (result) {
                        that.customers = result
                    },
                    error: function (err) {
                        console.log(err)
                        handleErrorResponse(err, "Fetch error", that)
                    }
                });
            },
            fetchCustomerHours: function () {
                var that = this
                var urlString = `/api/customer-hours/${this.selectedCustomerId}`
                $.ajax({
                    type: "GET",
                    url: urlString,
                    dataType: "json",
                    success: function (result) {
                        that.customerHours = result
                    },
                    error: function (err) {
                        console.log(err)
                        handleErrorResponse(err, "Fetch error", that)
                    }
                });
            },
            saveCustomerHours() {
                console.log(this.customerHoursModel)
                var method = this.customerHoursModel.id > 0 ? 'PUT' : 'POST'
                this.customerHoursModel.customerId = this.selectedCustomerId
                var that = this
                $.ajax({
                    type: method,
                    url: "/api/customer-hours",
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    dataType: 'json',
                    data: JSON.stringify(that.customerHoursModel),
                    success: function (result) {
                        that.fetchCustomerHours()
                        that.resetCustomerHoursModel()
                    },
                    error: function (err) {
                        handleErrorResponse(err, 'Saving Error', that)
                    }
                });
            },
            resetCustomerHoursModel() {
                this.customerHoursModel =
                {
                    id: 0,
                    customerId: 0,
                    dayOfWeek: null,
                    opening: '',
                    closing: ''
                }
            },
            populateModel(row) {
                this.customerHoursModel = {
                    id: row.id,
                    dayOfWeek: row.dayOfWeek,
                    opening: row.openingFormatted,
                    closing: row.closingFormatted
                }
            }
        },
        computed: {
            selectedCustomerName() {
                var customer = this.customers?.find(({ id }) => id === this.selectedCustomerId)
                if(customer) return customer.name
                return ''
            }
        },
        watch: {
        },
        mounted() {
            this.fetchCustomers()
            this.selectedCustomerId = @Model.CustomerIdString
                if (this.selectedCustomerId)
                this.fetchCustomerHours()
        }
    })
</script>
<style type="text/css">
    /* taken from vuejs.org */
    .fade-enter-active, .fade-leave-active {
        transition: opacity .5s
    }

    .fade-enter, .fade-leave-to {
        opacity: 0
    }

</style>